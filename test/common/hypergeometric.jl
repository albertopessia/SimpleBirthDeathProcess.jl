# precise values were computed with Maple 2018.2.1
@testset "k = 1: Smallest parameter is equal to 0" begin
  a = Float64[0, 1, 10, 100, 1_000, 10_000]
  z = Float64[0.0001, 0.05, 0.25, 0.5, 0.75, 0.95, 0.999, 1.0, 1.001, 1.5, 2.0, 5.0, 10.0, 100.0]

  @testset for (v, i) = enumerate(a), (u, x) = enumerate(z)
    @test SimpleBirthDeathProcess.log_hypergeometric(i, zero(Float64), log(x)) === zero(Float64)
  end
end

@testset "k = 1: Smallest parameter is equal to 1" begin
  a = Float64[1, 10, 100, 1_000, 10_000]
  z = Float64[0.0001, 0.05, 0.25, 0.5, 0.75, 0.95, 0.999, 1.0, 1.001, 1.5, 2.0, 5.0, 10.0, 100.0]

  @testset for (v, i) = enumerate(a), (u, x) = enumerate(z)
    @test SimpleBirthDeathProcess.log_hypergeometric(i, one(Float64), log(x)) ≈ log1p(z[u])
  end
end

@testset "k = 1: Smallest parameter is equal to 10" begin
  a = Float64[10, 100, 1_000, 10_000]
  z = Float64[0.0001, 0.05, 0.25, 0.5, 0.75, 0.95, 0.999, 1.0, 1.001, 1.5, 2.0, 5.0, 10.0, 100.0]

  F = [.52629570750287642e-3 .91738879566125019e-3 .99103116479562278e-3 .99905090243401476e-3;
       .25827405402099644 .44843337932042183 .48365235659705397 .48747343730492292;
       1.2054650954697372 2.0636024443887799 2.2135642778561085 2.2296368083023555;
       2.2363597073435242 3.7717986038306407 4.0248301950016774 4.0516528801920376;
       3.1400087187564869 5.2295234752131476 5.5577840348697503 5.5923027193844829;
       3.7917650954983671 6.2594003839524659 6.6346492459499567 6.6739111333451279;
       3.9432482803681855 6.4962973784476965 6.8816948938946638 6.9219748306325743;
       3.9463086440638964 6.5010739252600879 6.8866736335117214 6.9269738299247465;
       3.9493677809408321 6.5058481865958856 6.8916498955268224 6.9319703314655938;
       5.3418154461353614 8.6418531256852886 9.1091011971693386 9.1575092622170040;
       6.5259297666347161 10.403699599162072 10.926302430593021 10.980124686221491;
       11.370989154827456 17.178317589397033 17.842706622218652 17.910095816706045;
       16.015972663553841 23.166677252626662 23.897200666625793 23.970771578398150;
       35.440236886017119 45.259632511457571 46.062102918942031 46.142294355447970]

  @testset for (v, i) = enumerate(a), (u, x) = enumerate(z)
    @test SimpleBirthDeathProcess.log_hypergeometric(i, Float64(10), log(x)) ≈ F[u, v]
  end
end

@testset "k = 1: Smallest parameter is equal to 100" begin
  a = Float64[100, 1_000, 10_000]
  z = Float64[0.0001, 0.05, 0.25, 0.5, 0.75, 0.95, 0.999, 1.0, 1.001, 1.5, 2.0, 5.0, 10.0, 100.0]

  F = [.50249368807809934e-2 .90987634287470340e-2 .99014802318167912e-2;
       2.4666443059832288 4.4482851939723456 4.8323139970139239;
       11.524281754588844 20.480803126601523 22.117912345460543;
       21.400865955167309 37.453351842420101 40.218677436589141;
       30.072315426599046 51.949247565387039 55.539683534816658;
       36.333830674236772 62.196534594341785 66.303069760338699;
       37.789959356670749 64.554315994835902 68.772395282427217;
       37.819380072632425 64.601858299203765 68.822160169402496;
       37.848789114135625 64.649377950963507 68.871900302643673;
       51.246835825536797 85.918710136477377 91.037419537357267;
       62.656980998947858 103.47455944362613 109.20340200218063;
       109.46579494823216 171.05660004460201 178.35230210076593;
       154.46757511501702 230.86168145561156 238.89032794264213;
       343.01569283539162 451.70431712929944 460.53193435379431]

  @testset for (v, i) = enumerate(a), (u, x) = enumerate(z)
    @test SimpleBirthDeathProcess.log_hypergeometric(i, Float64(100), log(x)) ≈ F[u, v]
  end
end

@testset "k = 1: Smallest parameter is equal to 1000" begin
  a = Float64[1_000, 10_000]
  z = Float64[0.0001, 0.05, 0.25, 0.5, 0.75, 0.95, 0.999, 1.0, 1.001, 1.5, 2.0, 5.0, 10.0, 100.0]

  F = [.50023136359714628e-1 .90913185893301719e-1;
       24.556062009329795 44.447116566494245;
       114.73804119098180 204.65399437047979;
       213.09154263526358 374.27063596879579;
       299.45745843985605 519.14850966958181;
       361.82793031880269 621.56999830698620;
       376.33310417901014 645.13663820919853;
       376.62618055924502 645.61183835006045;
       376.91914076041489 646.08681216570142;
       510.39623395340794 858.68943294195577;
       624.08549449957836 1034.1852145148492;
       1090.6064193359382 1709.8407880825313;
       1539.2529853619575 2307.8125159100825;
       3419.6984988733087 4516.1511309139319]


  @testset for (v, i) = enumerate(a), (u, x) = enumerate(z)
    @test SimpleBirthDeathProcess.log_hypergeometric(i, Float64(1_000), log(x)) ≈ F[u, v]
  end
end

@testset "k in [1, 0, -1]: Smallest parameter is equal to 10" begin
  a = Float64[10, 100, 1_000, 10_000]
  z = Float64[0.0001, 0.05, 0.25, 0.5, 0.75, 0.95, 0.999, 1.0, 1.001, 1.5, 2.0, 5.0, 10.0, 100.0]

  F1 = [.52629570750287642e-3 .91738879566125019e-3 .99103116479562278e-3 .99905090243401476e-3;
        .25827405402099644 .44843337932042183 .48365235659705397 .48747343730492292;
        1.2054650954697372 2.0636024443887799 2.2135642778561085 2.2296368083023555;
        2.2363597073435242 3.7717986038306407 4.0248301950016774 4.0516528801920376;
        3.1400087187564869 5.2295234752131476 5.5577840348697503 5.5923027193844829;
        3.7917650954983671 6.2594003839524659 6.6346492459499567 6.6739111333451279;
        3.9432482803681855 6.4962973784476965 6.8816948938946638 6.9219748306325743;
        3.9463086440638964 6.5010739252600879 6.8866736335117214 6.9269738299247465;
        3.9493677809408321 6.5058481865958856 6.8916498955268224 6.9319703314655938;
        5.3418154461353614 8.6418531256852886 9.1091011971693386 9.1575092622170040;
        6.5259297666347161 10.403699599162072 10.926302430593021 10.980124686221491;
        11.370989154827456 17.178317589397033 17.842706622218652 17.910095816706045;
        16.015972663553841 23.166677252626662 23.897200666625793 23.970771578398150;
        35.440236886017119 45.259632511457571 46.062102918942031 46.142294355447970]

  F2 = [.44998345678670619e-3 .82496193284742848e-3 .89192008545566585e-3 .89914573134024811e-3;
        .22097348997472164 .40326729413131295 .43528341511859189 .43872605598148542;
        1.0337869442705281 1.8559564900380504 1.9921934559411943 2.0066729818594451;
        1.9223436082513246 3.3925865169201566 3.6223249060077170 3.6464873674046837;
        2.7041931940186855 4.7040669720766040 5.0019785898363071 5.0330721749260146;
        3.2696518295546249 5.6306933961520946 5.9711546994858141 6.0065197217477258;
        3.4012513696979216 5.8438472067500863 6.1934952647312047 6.2297770441467050;
        3.4039106862133272 5.8481450451956800 6.1979761202089027 6.2342761434082884;
        3.4065689624653464 5.8524408281779971 6.2024547458599853 6.2387729946938314;
        4.6190964452624217 7.7744591864540570 8.1981572586687954 8.2417579959973827;
        5.6538481761652827 9.3599027325441433 9.8336363685542776 9.8821118577812427;
        9.9150684195832806 15.456667865588829 16.058396715552669 16.119085841417183;
        14.030398994378236 20.846094369967696 21.507440548989568 21.573694019021120;
        31.404933440248328 40.729711990331924 41.455852237488533 41.528064515050814]

  F3 = [.37645737093725218e-3 .73267652494216932e-3 .79281076158312994e-3 .79924057819886665e-3;
        .18501505641666830 .35816765997400180 .38691529076290343 .38997868300551447;
        .86797500773573354 1.6485764401614848 1.7708258096930680 1.7837091877515229;
        1.6185025569124830 3.0137963828233681 3.2198245324530256 3.2413219045320742;
        2.2818894473571170 4.1791318554875865 4.4461791154097941 4.4738416909885490;
        2.7632381871697886 5.0025634774356329 5.3076666945255646 5.3391283763894788;
        2.8754387937166076 5.1919854674496699 5.5053022916911211 5.5375793250461307;
        2.8777067671217975 5.1958048215043223 5.5092852652820301 5.5415785242996434;
        2.8799738794608238 5.1996223498017387 5.5132662568183175 5.5455757253523662;
        3.9166606851026718 6.9077365078259501 7.2872207908624379 7.3260068052879610;
        4.8050596781442441 8.3168240164637134 8.7409782203730292 8.7840991092543809;
        8.4916436064234296 13.735821088365889 14.274095482354261 14.328075953551293;
        12.083136743044405 18.526335751794288 19.117689283855788 19.176616548826644;
        27.419142471984311 36.200625034610757 36.849610483741025 36.913834764572873]

  @testset for (v, i) = enumerate(a), (u, x) = enumerate(z)
    r1, r2, r3 = SimpleBirthDeathProcess.log_hypergeometric_joint(Float64(10), Float64(2), log(x))
    @test r1 ≈ log1p(z[u]) - log(11) + log(11 + 9 * z[u])
    @test r2 ≈ log1p(9 * z[u] / 10)
    @test r3 === zero(Float64)

    r1, r2, r3 = SimpleBirthDeathProcess.log_hypergeometric_joint(i, Float64(10), log(x))
    @test r1 ≈ F1[u, v]
    @test r2 ≈ F2[u, v]
    @test r3 ≈ F3[u, v]
  end
end

@testset "k in [1, 0, -1]: Smallest parameter is equal to 100" begin
  a = Float64[100, 1_000, 10_000]
  z = Float64[0.0001, 0.05, 0.25, 0.5, 0.75, 0.95, 0.999, 1.0, 1.001, 1.5, 2.0, 5.0, 10.0, 100.0]

  F1 = [.50249368807809934e-2 .90987634287470340e-2 .99014802318167912e-2;
        2.4666443059832288 4.4482851939723456 4.8323139970139239;
        11.524281754588844 20.480803126601523 22.117912345460543;
        21.400865955167309 37.453351842420101 40.218677436589141;
        30.072315426599046 51.949247565387039 55.539683534816658;
        36.333830674236772 62.196534594341785 66.303069760338699;
        37.789959356670749 64.554315994835902 68.772395282427217;
        37.819380072632425 64.601858299203765 68.822160169402496;
        37.848789114135625 64.649377950963507 68.871900302643673;
        51.246835825536797 85.918710136477377 91.037419537357267;
        62.656980998947858 103.47455944362613 109.20340200218063;
        109.46579494823216 171.05660004460201 178.35230210076593;
        154.46757511501702 230.86168145561156 238.89032794264213;
        343.01569283539162 451.70431712929944 460.53193435379431]

  F2 = [.49498146993667119e-2 .90069636852402412e-2 .98024558201806584e-2;
        2.4299167476990252 4.4034209515414675 4.7839863843406208;
        11.355103716989390 20.274470401927723 21.896715841394308;
        21.091177618372048 37.076400822137734 39.816463762401394;
        29.642236173597454 51.426769581826806 54.984254027376182;
        35.818373131251335 61.571266000234244 65.640003267968256;
        37.254821359540792 63.905404776958647 68.084634907931466;
        37.283845094226251 63.952470380968845 68.133902133716824;
        37.312857337844685 63.999513560653828 68.183144853323734;
        50.532684991172307 85.055682936009055 90.127004465471585;
        61.794709682825008 102.43570683587193 108.11132468235296;
        108.02335422838683 169.34144506661048 176.56873162702488;
        152.49755416222608 228.54835469900929 236.50137623187276;
        338.99663037344746 447.18251128663564 455.92656616789762]

  F3 = [.48749450306762533e-2 .89151788823844733e-2 .97034316007880775e-2;
        2.3933109019165650 4.3585637366489039 4.7356588611679045;
        11.186458746974319 20.068165915296292 21.675519685361248;
        20.782415661414754 36.699494779300824 39.414250627167662;
        29.213388876149237 50.904347324146949 54.428825174788873;
        35.304348363141624 60.946059184724153 64.976937493197120;
        36.721160676052845 63.256556576223269 67.396875263636285;
        36.749788321316848 63.303145504300101 67.445644828479381;
        36.778404658235848 63.349712236301587 67.494390134699319;
        49.820388773179653 84.192727819818496 89.216590213380003;
        60.934570748315407 101.39693148129660 107.01924823109579;
        106.58389780095158 167.62637678300494 174.78516210553471;
        150.53105487361483 226.23511704031285 234.11242549309786;
        334.98210607276279 442.66079559878089 451.32119896229363]

  @testset for (v, i) = enumerate(a), (u, x) = enumerate(z)
    r1, r2, r3 = SimpleBirthDeathProcess.log_hypergeometric_joint(Float64(100), Float64(2), log(x))
    @test r1 ≈ log1p(z[u]) - log(101) + log(101 + 99 * z[u])
    @test r2 ≈ log1p(99 * z[u] / 100)
    @test r3 === zero(Float64)

    r1, r2, r3 = SimpleBirthDeathProcess.log_hypergeometric_joint(i, Float64(100), log(x))
    @test r1 ≈ F1[u, v]
    @test r2 ≈ F2[u, v]
    @test r3 ≈ F3[u, v]
  end
end

@testset "k in [1, 0, -1]: Smallest parameter is equal to 1000" begin
  a = Float64[1_000, 10_000]
  z = Float64[0.0001, 0.05, 0.25, 0.5, 0.75, 0.95, 0.999, 1.0, 1.001, 1.5, 2.0, 5.0, 10.0, 100.0]

  F1 = [.50023136359714628e-1 .90913185893301719e-1;
        24.556062009329795 44.447116566494245;
        114.73804119098180 204.65399437047979;
        213.09154263526358 374.27063596879579;
        299.45745843985605 519.14850966958181;
        361.82793031880269 621.56999830698620;
        376.33310417901014 645.13663820919853;
        376.62618055924502 645.61183835006045;
        376.91914076041489 646.08681216570142;
        510.39623395340794 858.68943294195577;
        624.08549449957836 1034.1852145148492;
        1090.6064193359382 1709.8407880825313;
        1539.2529853619575 2307.8125159100825;
        3419.6984988733087 4516.1511309139319]

  F2 = [.49948127291680893e-1 .90821447794235120e-1;
        24.519388970102761 44.402282005465535;
        114.56910189594814 204.44779094691963;
        212.78226912186370 373.89390785783417;
        299.02793075953787 518.62632562316103;
        361.31311418683165 620.94506926038766;
        375.79862751389278 644.48807652132610;
        376.09130731173913 644.96280016119640;
        376.38387111361191 645.43729770395815;
        509.68291314254013 857.82683757123930;
        623.22417730264136 1033.1468512938082;
        1089.1653124992746 1708.1262776258678;
        1537.2845364794923 2305.4999102042296;
        3415.6814416938878 4511.6301327159023]

  F3 = [.49873143246801418e-1 .90729711196776349e-1;
        24.482727992831556 44.357448150824494;
        114.40021543877559 204.24159036290622;
        212.47308744782300 373.51718427133454;
        298.59852522947545 518.10414718390371;
        360.79844012945262 620.32014643098337;
        375.26429734277602 643.83952117550954;
        375.55658064673090 644.31376831685064;
        375.84874813773730 644.78778958919225;
        508.96977627099518 856.96424945705929;
        622.36307161979581 1032.1084958509835;
        1087.7245017908888 1706.4117759012473;
        1535.3164371300011 2303.1873134735524;
        3411.6648351122439 4507.1091436000474]

  @testset for (v, i) = enumerate(a), (u, x) = enumerate(z)
    r1, r2, r3 = SimpleBirthDeathProcess.log_hypergeometric_joint(Float64(1_000), Float64(2), log(x))
    @test r1 ≈ log1p(z[u]) - log(1_001) + log(1_001 + 999 * z[u])
    @test r2 ≈ log1p(999 * z[u] / 1_000)
    @test r3 === zero(Float64)

    r1, r2, r3 = SimpleBirthDeathProcess.log_hypergeometric_joint(i, Float64(1_000), log(x))
    @test r1 ≈ F1[u, v]
    @test r2 ≈ F2[u, v]
    @test r3 ≈ F3[u, v]
  end
end
